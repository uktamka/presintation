name: deployment_develop

on:
  push
    # branch: development
    # paths:
    # - 'backend/**'
    # - 'server/**'

env:
  DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }} 
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}

jobs: 
  database: 
    runs-on: ubuntu-latest

    steps: 
    - uses: actions/checkout@v2

    - name: Build backend service
      run: docker-compose -f docker-compose-dev.yml build data-base

    - name: Stop and remove data-base service
      run: docker-compose -f docker-compose-dev.yml rm -f -s data-base

    - name: Run data-base service
      run: docker-compose -f docker-compose-dev.yml up -d data-base

  backend:
    runs-on: ubuntu-latest
    needs: database

    steps: 
    - uses: actions/checkout@v2

    - name: Build backend service
      run: docker-compose -f docker-compose-dev.yml build backend

    - name: Stop and remove backend service
      run: docker-compose -f docker-compose-dev.yml rm -f -s backend

    - name: Run backend service
      run: docker-compose -f docker-compose-dev.yml up -d backend

  frontend:
    runs-on: ubuntu-latest
    needs: backend

    steps: 
    - uses: actions/checkout@v2

    - name: Build frontend service
      run: docker-compose -f docker-compose-dev.yml build frontend

    - name: Stop and remove frontend service
      run: docker-compose -f docker-compose-dev.yml rm -f -s frontend

    - name: Run frontend service
      run: docker-compose -f docker-compose-dev.yml up -d frontend

  server:
    runs-on: ubuntu-latest
    needs: [database, backend, frontend]

    steps: 
    - uses: actions/checkout@v2

    - name: Build server service
      run: docker-compose -f docker-compose-dev.yml build server

    - name: Stop and remove server service
      run: docker-compose -f docker-compose-dev.yml rm -f -s server

    - name: Run server service
      run: docker-compose -f docker-compose-dev.yml up -d server

    - name: Clear docker
      run: docker rmi $(docker images -f dangling=true -q) || true